// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: test.proto
// Protobuf C++ Version: 5.29.5

#ifndef test_2eproto_2epb_2eh
#define test_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029005
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_test_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_test_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_test_2eproto;
class TrainingSample;
struct TrainingSampleDefaultTypeInternal;
extern TrainingSampleDefaultTypeInternal _TrainingSample_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class TrainingSample final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:TrainingSample) */ {
 public:
  inline TrainingSample() : TrainingSample(nullptr) {}
  ~TrainingSample() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TrainingSample* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TrainingSample));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TrainingSample(
      ::google::protobuf::internal::ConstantInitialized);

  inline TrainingSample(const TrainingSample& from) : TrainingSample(nullptr, from) {}
  inline TrainingSample(TrainingSample&& from) noexcept
      : TrainingSample(nullptr, std::move(from)) {}
  inline TrainingSample& operator=(const TrainingSample& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainingSample& operator=(TrainingSample&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrainingSample& default_instance() {
    return *internal_default_instance();
  }
  static inline const TrainingSample* internal_default_instance() {
    return reinterpret_cast<const TrainingSample*>(
        &_TrainingSample_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(TrainingSample& a, TrainingSample& b) { a.Swap(&b); }
  inline void Swap(TrainingSample* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainingSample* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrainingSample* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TrainingSample>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrainingSample& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TrainingSample& from) { TrainingSample::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TrainingSample* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "TrainingSample"; }

 protected:
  explicit TrainingSample(::google::protobuf::Arena* arena);
  TrainingSample(::google::protobuf::Arena* arena, const TrainingSample& from);
  TrainingSample(::google::protobuf::Arena* arena, TrainingSample&& from) noexcept
      : TrainingSample(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStateFeaturesFieldNumber = 3,
    kPolicyTargetFieldNumber = 4,
    kIsBiddingFieldNumber = 1,
    kPlayerIdxFieldNumber = 2,
    kValueTargetFieldNumber = 5,
    kActualGameWinValueFieldNumber = 6,
  };
  // repeated float state_features = 3;
  int state_features_size() const;
  private:
  int _internal_state_features_size() const;

  public:
  void clear_state_features() ;
  float state_features(int index) const;
  void set_state_features(int index, float value);
  void add_state_features(float value);
  const ::google::protobuf::RepeatedField<float>& state_features() const;
  ::google::protobuf::RepeatedField<float>* mutable_state_features();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_state_features() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_state_features();

  public:
  // repeated float policy_target = 4;
  int policy_target_size() const;
  private:
  int _internal_policy_target_size() const;

  public:
  void clear_policy_target() ;
  float policy_target(int index) const;
  void set_policy_target(int index, float value);
  void add_policy_target(float value);
  const ::google::protobuf::RepeatedField<float>& policy_target() const;
  ::google::protobuf::RepeatedField<float>* mutable_policy_target();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_policy_target() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_policy_target();

  public:
  // bool is_bidding = 1;
  void clear_is_bidding() ;
  bool is_bidding() const;
  void set_is_bidding(bool value);

  private:
  bool _internal_is_bidding() const;
  void _internal_set_is_bidding(bool value);

  public:
  // int32 player_idx = 2;
  void clear_player_idx() ;
  ::int32_t player_idx() const;
  void set_player_idx(::int32_t value);

  private:
  ::int32_t _internal_player_idx() const;
  void _internal_set_player_idx(::int32_t value);

  public:
  // float value_target = 5;
  void clear_value_target() ;
  float value_target() const;
  void set_value_target(float value);

  private:
  float _internal_value_target() const;
  void _internal_set_value_target(float value);

  public:
  // float actual_game_win_value = 6;
  void clear_actual_game_win_value() ;
  float actual_game_win_value() const;
  void set_actual_game_win_value(float value);

  private:
  float _internal_actual_game_win_value() const;
  void _internal_set_actual_game_win_value(float value);

  public:
  // @@protoc_insertion_point(class_scope:TrainingSample)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TrainingSample& from_msg);
    ::google::protobuf::RepeatedField<float> state_features_;
    ::google::protobuf::RepeatedField<float> policy_target_;
    bool is_bidding_;
    ::int32_t player_idx_;
    float value_target_;
    float actual_game_win_value_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TrainingSample

// bool is_bidding = 1;
inline void TrainingSample::clear_is_bidding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_bidding_ = false;
}
inline bool TrainingSample::is_bidding() const {
  // @@protoc_insertion_point(field_get:TrainingSample.is_bidding)
  return _internal_is_bidding();
}
inline void TrainingSample::set_is_bidding(bool value) {
  _internal_set_is_bidding(value);
  // @@protoc_insertion_point(field_set:TrainingSample.is_bidding)
}
inline bool TrainingSample::_internal_is_bidding() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_bidding_;
}
inline void TrainingSample::_internal_set_is_bidding(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_bidding_ = value;
}

// int32 player_idx = 2;
inline void TrainingSample::clear_player_idx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_idx_ = 0;
}
inline ::int32_t TrainingSample::player_idx() const {
  // @@protoc_insertion_point(field_get:TrainingSample.player_idx)
  return _internal_player_idx();
}
inline void TrainingSample::set_player_idx(::int32_t value) {
  _internal_set_player_idx(value);
  // @@protoc_insertion_point(field_set:TrainingSample.player_idx)
}
inline ::int32_t TrainingSample::_internal_player_idx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_idx_;
}
inline void TrainingSample::_internal_set_player_idx(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_idx_ = value;
}

// repeated float state_features = 3;
inline int TrainingSample::_internal_state_features_size() const {
  return _internal_state_features().size();
}
inline int TrainingSample::state_features_size() const {
  return _internal_state_features_size();
}
inline void TrainingSample::clear_state_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_features_.Clear();
}
inline float TrainingSample::state_features(int index) const {
  // @@protoc_insertion_point(field_get:TrainingSample.state_features)
  return _internal_state_features().Get(index);
}
inline void TrainingSample::set_state_features(int index, float value) {
  _internal_mutable_state_features()->Set(index, value);
  // @@protoc_insertion_point(field_set:TrainingSample.state_features)
}
inline void TrainingSample::add_state_features(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_state_features()->Add(value);
  // @@protoc_insertion_point(field_add:TrainingSample.state_features)
}
inline const ::google::protobuf::RepeatedField<float>& TrainingSample::state_features() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:TrainingSample.state_features)
  return _internal_state_features();
}
inline ::google::protobuf::RepeatedField<float>* TrainingSample::mutable_state_features()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:TrainingSample.state_features)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_state_features();
}
inline const ::google::protobuf::RepeatedField<float>&
TrainingSample::_internal_state_features() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.state_features_;
}
inline ::google::protobuf::RepeatedField<float>* TrainingSample::_internal_mutable_state_features() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.state_features_;
}

// repeated float policy_target = 4;
inline int TrainingSample::_internal_policy_target_size() const {
  return _internal_policy_target().size();
}
inline int TrainingSample::policy_target_size() const {
  return _internal_policy_target_size();
}
inline void TrainingSample::clear_policy_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.policy_target_.Clear();
}
inline float TrainingSample::policy_target(int index) const {
  // @@protoc_insertion_point(field_get:TrainingSample.policy_target)
  return _internal_policy_target().Get(index);
}
inline void TrainingSample::set_policy_target(int index, float value) {
  _internal_mutable_policy_target()->Set(index, value);
  // @@protoc_insertion_point(field_set:TrainingSample.policy_target)
}
inline void TrainingSample::add_policy_target(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_policy_target()->Add(value);
  // @@protoc_insertion_point(field_add:TrainingSample.policy_target)
}
inline const ::google::protobuf::RepeatedField<float>& TrainingSample::policy_target() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:TrainingSample.policy_target)
  return _internal_policy_target();
}
inline ::google::protobuf::RepeatedField<float>* TrainingSample::mutable_policy_target()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:TrainingSample.policy_target)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_policy_target();
}
inline const ::google::protobuf::RepeatedField<float>&
TrainingSample::_internal_policy_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.policy_target_;
}
inline ::google::protobuf::RepeatedField<float>* TrainingSample::_internal_mutable_policy_target() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.policy_target_;
}

// float value_target = 5;
inline void TrainingSample::clear_value_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_target_ = 0;
}
inline float TrainingSample::value_target() const {
  // @@protoc_insertion_point(field_get:TrainingSample.value_target)
  return _internal_value_target();
}
inline void TrainingSample::set_value_target(float value) {
  _internal_set_value_target(value);
  // @@protoc_insertion_point(field_set:TrainingSample.value_target)
}
inline float TrainingSample::_internal_value_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_target_;
}
inline void TrainingSample::_internal_set_value_target(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_target_ = value;
}

// float actual_game_win_value = 6;
inline void TrainingSample::clear_actual_game_win_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.actual_game_win_value_ = 0;
}
inline float TrainingSample::actual_game_win_value() const {
  // @@protoc_insertion_point(field_get:TrainingSample.actual_game_win_value)
  return _internal_actual_game_win_value();
}
inline void TrainingSample::set_actual_game_win_value(float value) {
  _internal_set_actual_game_win_value(value);
  // @@protoc_insertion_point(field_set:TrainingSample.actual_game_win_value)
}
inline float TrainingSample::_internal_actual_game_win_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.actual_game_win_value_;
}
inline void TrainingSample::_internal_set_actual_game_win_value(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.actual_game_win_value_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // test_2eproto_2epb_2eh
